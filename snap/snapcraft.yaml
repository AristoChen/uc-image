name: uc-image
version: "4.2.0"
summary: Custom ubuntu core image buider
description: |
 Toolset to build emmc ubuntu core images for various boards, supporting custom flash tools.
 Created images can be used with tools like fastboot, uuu(mfgtools)

confinement: strict
grade: stable

environment:
    PATH:            $SNAP/usr/sbin:$SNAP/usr/bin:$SNAP/sbin:$SNAP/bin:$SNAP/${SNAPCRAFT_ARCH_TRIPLET}/bin:$PATH:$SNAP/aarch64-linux-gnu/bin
    LD_LIBRARY_PATH: $SNAP_LIBRARY_PATH:$LD_LIBRARY_PATH:$SNAP/lib:$SNAP/usr/lib:$SNAP/lib/${SNAPCRAFT_ARCH_TRIPLET}:$SNAP/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}:$SNAP/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/android
    LANG:            C
    PYTHONPATH:      $SNAP/usr/lib/python3/dist-packages

base: core20

layout:
  /etc/mke2fs.conf:
    bind-file: $SNAP/etc/mke2fs.conf
  /etc/mtools.conf:
    bind-file: $SNAP/etc/mtools.conf

apps:
    uc-image:
        command: bin/uc-image
        adapter: none
        plugs:
            - home
            - mount-observe
            - network-observe
            - removable-media
            - ssh-public-keys

architectures:
    - build-on: armhf
    - build-on: arm64
    - build-on: amd64

parts:
  tools:
    plugin: nil
    stage-packages:
      - e2fsprogs
      - libfdisk1
      - libuuid1
      - libblkid1
      - libcomerr2
      - libudev1
      - zlib1g
      - liblzma5
      - e2fslibs
      - img2simg
      - simg2img
      - android-libsparse
      - mtools
      - squashfs-tools
      - dosfstools
      - gdisk
      - fakeroot
      - openssh-client
      - ssh-import-id
      - ca-certificates
      - wget
      - xdelta3
      - xz-utils
    override-build: |
      sed -i \
          -e 's|/usr/lib/|${SNAP}/usr/lib/|g' \
          -e 's|FAKEROOT_PREFIX=|FAKEROOT_PREFIX=${SNAP}|g' \
          -e 's|FAKEROOT_BINDIR=|FAKEROOT_BINDIR=${SNAP}|g' \
          ${SNAPCRAFT_PART_INSTALL}/usr/bin/fakeroot-sysv
      ln -sf fakeroot-sysv ${SNAPCRAFT_PART_INSTALL}/usr/bin/fakeroot
      # fix ssh_import_id search path for etc/ssh/ssh_import_id
      sed -i \
          's|\(conf_file = \).*|\1os.path.join(os.getenv("SNAP"), "etc/ssh/ssh_import_id")|g' \
          ${SNAPCRAFT_PART_INSTALL}/usr/lib/python3/dist-packages/ssh_import_id/__init__.py
    stage:
      # make sure we do not have pulled in lsb_release, it makes no sense
      - -usr/bin/lsb_release

  glue:
    plugin: dump
    source: glue

  snap-client:
    plugin: nil
    override-build: |
      snap download snapd --edge
      unsquashfs -f -d ${SNAPCRAFT_PART_INSTALL} snapd*.snap usr/bin/snap

  yq:
    plugin: nil
    override-build: |
      snap download yq
      unsquashfs -f -d ${SNAPCRAFT_PART_INSTALL} yq*.snap bin/yq

  builder-dependencies:
    plugin: nil
    stage-packages:
      - rhash

  etc-assets:
    plugin: nil
    override-build: |
      # copy etc assets from core18 we might need during backdoor tasks
      mkdir -p ${SNAPCRAFT_PART_INSTALL}/etc/ssh
      cp -r /snap/core18/current/etc/skel ${SNAPCRAFT_PART_INSTALL}/etc
      cp /snap/core18/current/etc/ssh/sshd_config ${SNAPCRAFT_PART_INSTALL}/etc/ssh

  gcc:
    plugin: dump
    source: https://armkeil.blob.core.windows.net/developer/Files/downloads/gnu-a/8.2-2018.08/gcc-arm-8.2-2018.08-x86_64-aarch64-linux-gnu.tar.xz
    source-type: tar
    override-pull: |
      if [ "${SNAP_ARCH}" = "amd64" ]; then
        snapcraftctl pull
      else
        # we need to fake empty files as minimum here, so staging part is happy
        # tool is not expected to work for "exotic" image build on other than amd64 platform
        for f in \
              aarch64-linux-gnu/bin/as \
              aarch64-linux-gnu/bin/ld \
              bin/aarch64-linux-gnu-gcc \
              bin/aarch64-linux-gnu-objcopy \
              bin/aarch64-linux-gnu-strip \
              libexec/gcc/aarch64-linux-gnu/8/cc1 \
              libexec/gcc/aarch64-linux-gnu/8/liblto_plugin.so
        do
          mkdir -p "$(dirname ${f})" && touch "${f}"
        done
      fi
    stage:
      - aarch64-linux-gnu/bin/as
      - aarch64-linux-gnu/bin/ld
      - bin/aarch64-linux-gnu-gcc
      - bin/aarch64-linux-gnu-objcopy
      - bin/aarch64-linux-gnu-strip
      - libexec/gcc/aarch64-linux-gnu/*/cc1
      - libexec/gcc/aarch64-linux-gnu/*/liblto_plugin.so*

  android-mkfs-tools:
    plugin: nil
    stage-packages:
      - android-sdk-ext4-utils
